There are a few multiple-client issues that can arise when creating and running a collaborative graphical editor. For instance, one issue that we found initially, was that if the shape map IDs do not align, many issues can arise. Before we figured out a way to use a static index variable in the MessageHandler class, we found it difficult to ensure that each shape would have the same ID. This is important because deleting, moving, and recoloring commands all require that the shape being altered has an ID that is consistent among all of the clients' local sketches, as well as the server's global sketch reference. So, without this fix, those commands wouldn't always work. In our final version, these unexpected behaviors aren't possible. This is because, as mentioned, we devised a way of ensuring that each shape being altered has a unique ID. We used synchronized methods in the Sketch class that we created to ensure that only a singular thread could access the method at a time. Our only two methods, onShape and getIDToShape, both don't interact with a global variable. Because of this, we just synchronized them in order to ensure that no bugs arose that we weren't aware of. We debated using synchronized methods in our MessageHandler class, but decided that it wasn't necessary because the index variable is static. For the screenshot, we just did a localhost screenshot because we couldn't connect to the same network (one off-campus one on-campus).